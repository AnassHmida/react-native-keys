module.exports.makeCppFileTemplateAndroid = (data) => {
  return `
  #include "crypto.h"
  #include <string>
  #include "encrypt.h"

  using namespace std;

  Crypto::Crypto() {

  }


  std::string Crypto::getJniJsonStringyfyData(string key) {
    std::string jsonStringyfyData= "${data}";
      string hash;
      int len=jsonStringyfyData.length();
      char cahrtot[len+1];
      strcpy(cahrtot,jsonStringyfyData.c_str());
      hash=SHA256(cahrtot);
      string halfString=hash.substr(hash.length()/2);
      if(key==halfString)
      {
        return jsonStringyfyData;
      }
      else
      {
          return "";
      }
    
  }
  `;
};

module.exports.makeHFileTemplateAndroid = () => {
  return `
  
#ifndef CRYPTO_H
#define CRYPTO_H

#include <stdio.h>
#include <string>
using namespace std;

class Crypto
{
public:
  Crypto();
  string getJniJsonStringyfyData(string key);
};
#endif

  `;
};

module.exports.makeCryptographicModuleTemplateAndroid = (key) => {
  return `
// this is autogenerated, dont change within it
package com.reactnativekeysjsi;

public class PrivateKey {
 public static String privatekey="${key}";
}`;
};
